apiVersion: apps/v1
kind: Deployment
metadata:
  name: genai-gateway-deployment
  labels:
    app: litellm
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: litellm
  template:
    metadata:
      labels:
        app: litellm
    spec:
      initContainers:
        - name: wait-for-postgres-redis
          image: busybox:1.36
          command:
            - /bin/sh
            - -c
            - |
              until nc -z genai-gateway-postgresql.{{ .Release.Namespace }}.svc.cluster.local 5432 && nc -z genai-gateway-redis-master.{{ .Release.Namespace }}.svc.cluster.local 6379; do
                echo "Waiting for postgres and redis to be ready...";
                sleep 5;
              done
              echo "Postgres and Redis are up!"
{{- if .Values.restoreJob.enabled }}
        - name : wait-for-postgres-restore-job
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              until kubectl get job postgres-restore -n {{ .Release.Namespace }}; do
                echo "Waiting for restore job to be created...";
                sleep 5;
              done
              echo "Restore job is created!"
{{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: litellm-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@genai-gateway-postgresql:5432/{{ .Values.postgresql.auth.database }}
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.auth.password }}
{{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
{{- end }}
          args:
            - "--config"
            - "/litellm/proxy_config.yaml"
          volumeMounts:
            - name: config-volume
              mountPath: /litellm
              readOnly: true
          resources:
{{- if .Values.resources }}
            {{- toYaml .Values.resources | nindent 12 }}
{{- end }}
          startupProbe:
            httpGet:
              path: /health/readiness
              port: {{ .Values.service.port }}
{{- if .Values.probes.startup }}
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            successThreshold: {{ .Values.probes.startup.successThreshold }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
{{- end }}
          livenessProbe:
            httpGet:
              path: /health/liveliness
              port: {{ .Values.service.port }}
{{- if .Values.probes.liveness }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
{{- end }}
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: {{ .Values.service.port }}
{{- if .Values.probes.readiness }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
{{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: genai-gateway-config
        - name: on-prem-cert
          configMap:
            name: litellm-on-prem-cert