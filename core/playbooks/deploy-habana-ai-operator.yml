# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
---
- name: Deploy Habana AI Operator Namespace and Labels
  hosts: "{{ inference_delegate | default('kube_control_plane') }}"
  gather_facts: false
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  environment: "{{ proxy_disable_env | default(env_proxy | default({})) }}"
  vars_files:        
    - "{{ lookup('env', 'PWD') }}/config/vars/inference_common.yml" 
    - "{{ lookup('env', 'PWD') }}/config/vars/inference_delegate.yml"     
  roles:
    - role: inference-tools
  tasks:    
    - name:  Create Kubernetes Namespace for Habana AI Operator
      community.kubernetes.k8s:
        state: present
        kind: Namespace
        name: habana-ai-operator
    - name: Label namespace for pod Security Enforcement      
      community.kubernetes.k8s:
        state: present
        kind: Namespace
        name: habana-ai-operator
        resource_definition:
          metadata:
            labels:
              pod-security.kubernetes.io/enforce: privileged
              pod-security.kubernetes.io/audit: privileged
              pod-security.kubernetes.io/warn: privileged    
    - name: Add Gaudi Repository
      community.kubernetes.helm_repository:
        name: gaudi-helm
        repo_url: https://vault.habana.ai/artifactory/api/helm/gaudi-helm
        state: present              

    - name: Deploy Habana AI Operator
      community.kubernetes.helm:
        name: habana-ai-operator
        chart_ref: gaudi-helm/habana-ai-operator
        release_namespace: habana-ai-operator
        chart_version: "{{ gaudi_operator }} "
        state: present
      run_once: true           
    - name: Output waiting status
      debug:
        msg: "Waiting for Habana AI Operator"
      run_once: true      
    - name: Wait for Habana Operator Pods to be Running
      pause:
        minutes: 5
      register: pause_result      
    - name: Output the Result
      debug:
        msg: "Please Wait for few minutes for Habana AI Operator pods to be running."
      run_once: true      
    - name: Ensure all Habana AI Operator Pods Are Running and Ready
      shell: |
        kubectl get pods -n habana-ai-operator -o json | jq -r '
          .items[] |
          select(.status.phase != "Running" or (.status.containerStatuses[] | select(.ready != true))) |
          .metadata.name' | wc -l
      register: pod_status
      until: pod_status.stdout == "0" and pod_status.rc == 0
      retries: 260
      delay: 10
      failed_when: pod_status.rc != 0 and pod_status.stdout != "0"        
    - name: Check if Gaudi 3 Nodes are Available
      shell: "kubectl get nodes -l habana.ai/device.type=GAUDI3 --no-headers | wc -l"
      register: gaudi_node_count
      changed_when: false
    - name: Set Fact if Gaudi 3 Nodes are Available
      set_fact:
        gaudi_available: "{{ gaudi_node_count.stdout | int > 0 }}"              
    - name: Check if Habana AI Resources Exists
      ansible.builtin.command: kubectl get ds -n habana-ai-operator -o name
      register: habana_ds
      changed_when: false
      failed_when: false    
    - name: Debug DaemonSet Output
      ansible.builtin.debug:
        msg: "{{ habana_ds.stdout }}"
    - name: Install Habana Container Runtime
      ansible.builtin.apt:
        name: habanalabs-container-runtime
        state: present
      environment:
        DEBIAN_FRONTEND: noninteractive
      when: habana_ds.stdout_lines is defined and 'daemonset.apps/habana-ai-runtime-ds' not in habana_ds.stdout_lines                    
    - name: Store Original config.toml
      ansible.builtin.copy:
        src: /etc/containerd/config.toml
        dest: /etc/containerd/config.toml.bak
        remote_src: yes
      when: habana_ds.stdout_lines is defined and 'daemonset.apps/habana-ai-runtime-ds' not in habana_ds.stdout_lines    
    - name: Transfer Dependency files
      ansible.builtin.copy:
        src: "{{ remote_home_scripts_dir }}/habana/config.toml"
        dest: /etc/containerd/config.toml
        mode: '0644'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        remote_src: no
      when: habana_ds.stdout_lines is defined and 'daemonset.apps/habana-ai-runtime-ds' not in habana_ds.stdout_lines                        
    - name: Restart Containerd Service
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        daemon_reload: yes
      become: yes
      run_once: true
      when: habana_ds.stdout_lines is defined and 'daemonset.apps/habana-ai-runtime-ds' not in habana_ds.stdout_lines                
    - name: Install Habana Kubernetes Device Plugin for Gaudi 3
      kubernetes.core.k8s:
        state: present
        src: https://vault.habana.ai/artifactory/docker-k8s-device-plugin/habana-k8s-device-plugin.yaml
      register: k8s_result
      until: k8s_result is successful
      retries: 5
      delay: 10
      when: habana_ds.stdout_lines is defined and 'daemonset.apps/habana-ai-device-plugin-ds' not in habana_ds.stdout_lines
      run_once: true                                
    - name: Display User Message
      debug:
        msg: "All Habana AI Operator pods are running and ready."