name: "Coverity scan"

inputs:
  ANALYZE_OPTIONS:
    description: 'Analyze-options'
    required: true
  COMPILER_TYPE:
    description: 'Compiler-type'
    required: true
  RAG_COVERITY_USER:
    description: 'Coverity user'
    required: true
  RAG_COVERITY_PASSWORD:
    description: 'Coverity password'
    required: true

runs:
  using: "composite"
  steps:
  - name: Checkout
    uses: actions/checkout@v4
    with:
      submodules: 'recursive'
      fetch-depth: 0
      path: repo

  - name: Set up Coverity
    uses: intel-innersource/frameworks.actions.setup-coverity@v4
    with:
      analysis-version: 2024.6.1
      reports-version: 2024.6.1

  - name: Check Coverity version
    run: coverity --version
    shell: bash

  - name: Run Coverity scan
    id: run_coverity
    uses: intel-innersource/frameworks.actions.coverity-analysis@v4
    continue-on-error: true
    with:
      source: repo
      fail-if-issues-found: true
      url: https://coverity.devtools.intel.com/prod15
      project: DCAI-IaaS
      stream: DCAI-IaaS
      user: ${{ inputs.RAG_COVERITY_USER }}
      password: ${{ inputs.RAG_COVERITY_PASSWORD }}
      commit-defects: true
      analyze-options: ${{ inputs.ANALYZE_OPTIONS }}
      compiler-type: ${{ inputs.COMPILER_TYPE }}

  - name: Check for Coverity scan status
    if: steps.run_coverity.outcome != 'success'
    run: |
      echo "Exiting job because the Coverity scan failed."
      exit 1
    shell: bash

  - name: Collect Coverity reports
    uses: intel-innersource/frameworks.actions.coverity-analysis/sdl-reports@v4
    with:
      url: https://coverity.devtools.intel.com/prod15
      project: DCAI-IaaS
      project-version: 1.1.0
      user: ${{ inputs.RAG_COVERITY_USER }}
      password: ${{ inputs.RAG_COVERITY_PASSWORD }}
      snapshot: ${{steps.run_coverity.outputs.snapshot}}
      artifact-name: SDL reports for ${{ inputs.COMPILER_TYPE }} - Coverity snapshot ${{steps.run_coverity.outputs.snapshot}}
